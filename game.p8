pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- tetris

-- array of block
blocks={{t='i',
          b={{x=-1,y=0},
            {x=0,y=0},
            {x=1,y=0},
            {x=2,y=0}},
         sp=6},
        {t='j',
         b={{x=-1,y=0},
            {x=0,y=0},
            {x=1,y=0},
            {x=1,y=1}},
         sp=3},
        {t='l',
         b={{x=-1,y=0},
            {x=0,y=0},
            {x=1,y=0},
            {x=-1,y=1}},
         sp=0},
        {t='o',
         b={{x=0,y=0},
            {x=1,y=0},
            {x=0,y=1},
            {x=1,y=1}},
         sp=4},
        {t='s',
         b={{x=0,y=0},
            {x=1,y=0},
            {x=-1,y=1},
            {x=0,y=1}},
         sp=2},
        {t='t',
         b={{x=-1,y=0},
            {x=0,y=0},
            {x=1,y=0},
            {x=0,y=1}},
         sp=5},
        {t='z',
         b={{x=-1,y=0},
            {x=0,y=0},
            {x=0,y=1},
            {x=1,y=1}},
         sp=1}}

-- size of the blocks
size=8

-- size of board
max_x=8
max_y=15

-- points for number of lines
line_points={40,1000,3000,12000}
frames_per_level = {53, 49, 45,
41, 37, 33, 28, 22, 17, 11, 10,
9, 8, 7, 6, 6, 5, 5, 4, 4, 3}

-- softdrop rate
frames_per_cell = 3

-- game state
s={}

-- custom bignum impl for score
num_max = 10000
num_min = -10000

local bignum_mt = {}

function newbignum(b, s)
 local bignum = {
  big = b,
  small = s
 }
 setmetatable(bignum, bignum_mt)
 return bignum
end

function bignum_mt.__add(bignum, num)
 if type(bignum) == "number" then
  -- swap operand order
  temp = num
  num = bignum
  bignum = temp
 end

 local big = bignum.big
 local small = bignum.small

 small += num

 -- if overflow small
 while small >= num_max do
  small -= num_max
  big += 1
 end

 -- if negative small
 while small < 0 and big > 0 do
  small += num_max
  big -= 1
 end

 return newbignum(big, small)
end

function bignum_mt.__sub(bignum, num)
 if type(bignum) == "number" then
  return num + (- bignum)
 else
  return bignum + (- num)
 end
end

local bignum_methods = {}

function bignum_methods.tostr(self)
 local s = "" .. self.small
 if self.big > 0 then
  while #s < 4 do
    s = "0" .. s
  end
  return self.big .. s
 else
  return s
 end
end

function bignum_methods.print(self)
 print(self:tostr())
end

bignum_mt.__index = bignum_methods

local oldprint = print

function print(val, ...)
 if type(val) == "table" and val.tostring then
  oldprint(val:tostring(), ...)
 else
  oldprint(val, ...)
 end
end


-- functions
function rnd_elem(t)
 return t[flr(rnd(#t))+1]
end

function rnd_block()
 return rnd_elem(blocks)
end

function deep_clone(table)
 -- returns a deep clone of the
 -- given table
 local new_table = {}

 for k,v in pairs(table) do
  if type(v) == "table" then
   new_table[k] = deep_clone(v)
  else
   new_table[k] = v
  end
 end

 return new_table
end

function new_tet()
 local tet = deep_clone(rnd_block())

 tet.x = 101
 tet.y = 101

 return tet
end

function next_tet()
 s.current = s.next
 s.current.x = 40
 s.current.y = 8
 s.next = new_tet()
end

function _init()
 -- set the background color
 rectfill(0,0,
          127,127,
          5)

 -- create next and current
 -- tetris blocks
 s.next = new_tet()
 next_tet()

 -- an inverted 2d array board[y][x]
 s.board={}
 for y=0,max_y do
  s.board[y]={}
 end

 -- counts
 s.score = newbignum(0,0)
 s.level=0
 s.lines=0
 s.mode=0 -- 0=marathon, 1=
 s.starting_lines=5

 s.timer=0
 s.softdrop_counter=0
end

function bounded(b,fns)
 -- return true if and only
 -- for each point in b each
 -- f in fns is false
 for point in all(b.b) do
  local x = b.x+(point.x*size)
  local y = b.y+(point.y*size)
  for f in all(fns) do
   if f(x,y) then
    return false
   end
  end
 end
 return true
end

function bounded_sides(x,_)
 -- if the point is outside
 -- of the playfield
 return x<8 or x>=80
end

function bounded_bottom(_,y)
 -- if the point is out of the bottom
 return y>127
end

function bounded_board(x,y)
 -- if the point is in the board
 local _x = (x-size)/size
 local _y = y/size

 return s.board[_y][_x] != nil
end

function rotate(b)
 -- rotate a list of points
 -- clockwise around [0,0]
 local shape = {}
 for point in all(b) do
  local new_point = {}
  new_point.x=-point.y
  new_point.y=point.x
  add(shape,new_point)
 end
 return shape
end

function rotate_tet(t)
 if t.type then
 end
end

function add_board(piece)
 -- add a piece to the board
 local x=(piece.x-size)/size
 local y=piece.y/size

 for point in all(piece.b) do
  s.board[point.y+y][point.x+x] = piece.sp
 end
end

function detect_lines(piece)
 -- detect if there are any lines
 -- and remove them

 local ls={}

 for y=0,max_y do
  local count=0

  for x=0,max_x do
   if s.board[y][x]!=nil then
    count+=1
   end
  end

  if count==max_x+1 then
   add(ls,y)
  end
 end

 if #ls>0 then
  local new_board = {}

  local l_idx = #ls

  local o_idx = max_y
  local n_idx = max_y
  while o_idx>0 do
   if o_idx == ls[l_idx] then
    -- skip row
    l_idx-=1
    o_idx-=1
   else
    -- clone row
    new_board[n_idx]=s.board[o_idx]
    o_idx-=1
    n_idx-=1
   end
  end

  for i=0,n_idx do
   new_board[i]={}
  end

  s.board=new_board
  s.lines += #ls
  s.score += line_points[#ls]*(s.level+1)

  if s.lines > s.starting_lines then
   s.level = flr((s.lines-s.starting_lines)/10)
  end
 end
end

function _update60()
 -- advance timers
 s.timer += 1
 if s.softdrop_counter > 0 then
  s.softdrop_counter -= 1
 end

 -- advance piece
 if s.timer >= frames_per_level[s.level+1] then
  local new_c = deep_clone(s.current)

  new_c.y+=size

  if bounded(new_c,
             {bounded_bottom,
              bounded_board}) then
	  s.current=new_c
  else
	  add_board(s.current)
    detect_lines(s.current)
	  next_tet()
  end

  s.timer=0
 end

 -- move left
 if btnp(0) then
  local new_c = deep_clone(s.current)

  new_c.x-=size

  if bounded(new_c,
	           {bounded_sides,
	            bounded_board}) then
	  s.current=new_c
  end
 end

 -- move right
 if btnp(1) then
  local new_c = deep_clone(s.current)

  new_c.x+=size

  if bounded(new_c,
             {bounded_sides,
              bounded_board}) then
   s.current=new_c
  end
 end

 -- rotate
 if btnp(2) then
  local new_c = deep_clone(s.current)

  new_c.b = rotate(s.current.b)

  if bounded(new_c,
             {bounded_sides,
              bounded_bottom,
              bounded_board}) then
   s.current=new_c
  end
 end

 -- softdrop
 if btn(3) and s.softdrop_counter == 0 then
  local new_c = deep_clone(s.current)

  new_c.y+=size

  if bounded(new_c,
             {bounded_bottom,
              bounded_board}) then
   s.current=new_c
   s.timer=0
   s.softdrop_counter = frames_per_cell
  end
 end
end

function draw_tet(p)
 -- draw a tetramino
 for b in all(p.b) do
	 spr(p.sp,p.x+(b.x*size),
	          p.y+(b.y*size))
	end
end

function rprint(str,x,y,c)
 -- right align print
 print(str,
       x-((#tostr(str)-1)*4),
       y,
       c)
end

function rectrounded(x0,y0,x1,y1,col)
 -- draw a rounded rectangle

 -- top
 line(x0+1,y0,
      x1-1,y0,col)

 -- bottom
 line(x0+1,y1,
      x1-1,y1,col)

 -- left
 line(x0,y0+1,
      x0,y1-1,col)

 -- left
 line(x1,y0+1,
      x1,y1-1,col)

 -- top-left
 pset(x0+1,y0+1,col)

 -- top-right
 pset(x1-1,y0+1,col)

 -- bottom-right
 pset(x0+1,y1-1,col)

 -- bottom-right
 pset(x1-1,y1-1,col)
end

function rectbord(x0,y0,x1,y1,cols,n)
 -- draw a rectangle and then draw n borders
 -- alternates between cols
 local _len = #cols

 -- initial box
 rectfill(x0,y0,
          x1,y1,
          cols[1])

 -- draw boarders
 for i=1,n do
  rectrounded(x0-i,y0-i,
              x1+i,y1+i,
              cols[i%_len+1])
 end
end

function _draw()
 -- draw background
 rectfill(8,0,
          79,127,
          7)

 -- draw sides
 for x in all({0,80}) do
  for y=0,127,6 do
   spr(9,x,y)
  end
 end
 rect(88,0,
      88,128,
      7)

 -- draw score
 local s_h=4
 --- back
 rectfill(89,s_h+3,
          127,s_h+19,
          7)
 rectfill(89,s_h+4,
          127,s_h+8,
          6)
 rectfill(89,s_h+10,
          127,s_h+10,
          6)
 rectfill(89,s_h+18,
          127,s_h+18,
          6)
 --- text
 rectbord(98,s_h-1,
          118,s_h+5,
          {7,6},
          2)
 print("score",
       99,s_h,
       5)
 --- number
 rprint(s.score:tostr(),
        115,s_h+12,
        5)

 -- draw level
 local le_h=s_h+34
 rectbord(98,le_h-1,
          118,le_h+11,
          {7,6},
          2)
 print("level",
       99,le_h,
       5)
 rprint(s.level,
        115,le_h+6,
        5)

 -- draw lines
 local li_h=le_h+27
 rectbord(98,li_h-1,
          118,li_h+11,
          {7,6},
          2)
 print("lines",
       99,li_h,
       5)
 rprint(s.lines,
        115,li_h+6,
        5)

 -- draw next piece
 local np_h=109
 rectbord(92,np_h-17,
          125,np_h+16,
          {7,6},
          2)
 draw_tet(s.next)

 -- draw board
 for y=0,max_y do
  for x=0,max_x do
   sp=s.board[y][x]
   if sp!=nil then
    spr(sp,
        (x*size)+size,
        y*size)
   end
  end
 end

 -- draw current
 draw_tet(s.current)

 -- tests
 --print(myfps, 20, 0, 0)
 --print(stat(7), 20, 8, 0)
 --print(mybpps, 20, 16, 0)
end
__gfx__
55555555555555555555555555555555555555555555555555555555555555555555555560766076000000000000000000000000000000000000000000000000
5dddddd5566666655dddddd556666665577777755666666556d66d66d6d6d666d666d66560666066077777700000000000000000000000000000000000000000
5dddddd5566666655d5555d556555565575555755677776556666666666666d666d6666500000000076666500000000000000000000000000000000000000000
5dddddd5566556655d5665d55657756557555575567dd5655d66d6d666d6666666666d6576607660076666500000000000000000000000000000000000000000
5dddddd5566556655d5665d55657756557555575567dd56556666666d6666d666d6d666566606660076666500000000000000000000000000000000000000000
5dddddd5566666655d5555d556555565575555755655556556d666d6666d666d666666d500000000076666500000000000000000000000000000000000000000
5dddddd5566666655dddddd55666666557777775566666655666d6666d666d6666d6d66500000000055555500000000000000000000000000000000000000000
55555555555555555555555555555555555555555555555555555555555555555555555500000000000000000000000000000000000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888881718888888888888888888888888888888888888888888888888888888888888888888
88888eeeeee888888888888888888888888888888888888888888888881771888888888888888888888ff8ff8888228822888222822888888822888888228888
8888ee888ee88888888888888888888888888888888888888888888888177718888888888888888888ff888ff888222222888222822888882282888888222888
888eee8e8ee88888e88888888888888888888888888888888888888888177771888888888888888888ff888ff888282282888222888888228882888888288888
888eee8e8ee8888eee8888888888888888888888888888888888888888177118888888888888888888ff888ff888222222888888222888228882888822288888
888eee8e8ee88888e88888888888888888888888888888888888888888811718888888888888888888ff888ff888822228888228222888882282888222288888
888eee888ee888888888888888888888888888888888888888888888888888888888888888888888888ff8ff8888828828888228222888888822888222888888
888eeeeeeee888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
55555555555555555d5d5d5d5d5d5d5d55555d5d5d555d5d55d555555d5d55d55d555d555d555555555555555555555555555555555555555555555555555555
55555ddd5ddd55555d5d5dd55ddd5d5d55555d5d5dd555d555d555555ddd55d55dd55d555dd55555555555555555555555555555555555555555555555555555
55555555555555555d5d5d5d5d5d5ddd55555d5d5d555d5d55d555555d5555d55d555d555d555555555555555555555555555555555555555555555555555555
55555555555555555ddd5d5d5d5d5ddd55555d5d5ddd5d5d55d555555d555ddd5ddd55dd5ddd5555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
5555566556665555565655555cc55ccc5ccc55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555656565655555656577755c55c5c5c5c55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555656566655555666555555c55c5c5ccc55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555656565555555656577755c55c5c555c55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
5555565656555666565655555ccc5ccc555c55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555bbb5bbb55bb5bbb5bbb5bbb5b555b5555755ccc5ccc5555566556665555565655555cc55ccc555555555555555555555555555555555555555555555555
55555b5b5b555b5555b55b5555b55b555b5557555c5c5c5c55555656565655555656555555c55c5c555555555555555555555555555555555555555555555555
55555bb55bb55b5555b55bb555b55b555b5557555ccc5c5c55555656566655555666577755c55ccc555555555555555555555555555555555555555555555555
55555b5b5b555b5555b55b5555b55b555b555755555c5c5c55755656565555555656555555c5555c557555555555555555555555555555555555555555555555
55555b5b5bbb55bb55b55b555bbb5bbb5bbb5575555c5ccc5755565656555666565655555ccc555c575555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555cc55ccc5ccc5555566556665555565655555cc55ccc55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c5555c555c55555656565655555656557555c55c5c55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c55ccc555c55555656566655555666577755c55ccc55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c55c55555c55755656565555555656557555c55c5c55755555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc5ccc555c5755565656555666565655555ccc5ccc57555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc557555555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c557555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555bbb5bbb55bb5bbb5bbb5bbb5b555b5555755ccc5cc55555566556665555565655555cc55ccc555555555555555555555555555555555555555555555555
55555b5b5b555b5555b55b5555b55b555b5557555c5c55c555555656565655555656555555c55c5c555555555555555555555555555555555555555555555555
55555bb55bb55b5555b55bb555b55b555b5557555ccc55c555555656566655555666577755c55ccc555555555555555555555555555555555555555555555555
55555b5b5b555b5555b55b5555b55b555b555755555c55c555755656565555555656555555c55c5c557555555555555555555555555555555555555555555555
55555b5b5bbb55bb55b55b555bbb5bbb5bbb5575555c5ccc5755565656555666565655555ccc5ccc575555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555cc55ccc5c555555566556665555565655555cc55ccc55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c5555c5c5555555656565655555656557555c5555c55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c55ccc5ccc55555656566655555666577755c5555c55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c55c555c5c55755656565555555656557555c5555c55755555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc5ccc5ccc5755565656555666565655555ccc555c57555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555c55557555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555c55555755555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc555755555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555c5c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc557555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555bbb5bbb55bb5bbb5bbb5bbb5b555b5555755ccc5ccc5555566556665555565655555cc55ccc555555555555555555555555555555555555555555555555
55555b5b5b555b5555b55b5555b55b555b5557555c5c555c55555656565655555656555555c5555c555555555555555555555555555555555555555555555555
55555bb55bb55b5555b55bb555b55b555b5557555ccc5ccc55555656566655555666577755c5555c555555555555555555555555555555555555555555555555
55555b5b5b555b5555b55b5555b55b555b555755555c5c5555755656565555555656555555c5555c557555555555555555555555555555555555555555555555
55555b5b5bbb55bb55b55b555bbb5bbb5bbb5575555c5ccc5755565656555666565655555ccc555c575555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555cc55ccc5ccc5555566556665555565655555cc55c5555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c5555c5c5555555656565655555656557555c55c5555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c55ccc5ccc55555656566655555666577755c55ccc55555555555555555555555555555555555555555555
555555555555555555555555555555555555555555c55c55555c55755656565555555656557555c55c5c55755555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc5ccc5ccc5755565656555666565655555ccc5ccc57555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555ccc557555555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c555755555555555555555555555555555555555555555555555555555555555555555555555555555555
5555555555555555555555555555555555555555555c557555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555665566656665656555556665666566655755665566656565666557555555555555555555555555555555555555555555555555555555555555555555555
55555656565656565656555555655655556557555656565556565565555755555555555555555555555555555555555555555555555555555555555555555555
55555656566556665656555555655665556557555656566555655565555755555555555555555555555555555555555555555555555555555555555555555555
55555656565656565666555555655655556557555656565556565565555755555555555555555555555555555555555555555555555555555555555555555555
55555666565656565666566655655666556555755656566656565565557555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555dd55ddd5ddd5d5d555555dd5d5d5ddd5ddd5ddd5dd55ddd5555555555555555555555555555555555555555555555555555555555555555
55555555555555555d5d5d5d5d5d5d5d55555d555d5d5d5d5d5d5d555d5d55d55555555555555555555555555555555555555555555555555555555555555555
55555ddd5ddd55555d5d5dd55ddd5d5d55555d555d5d5dd55dd55dd55d5d55d55555555555555555555555555555555555555555555555555555555555555555
55555555555555555d5d5d5d5d5d5ddd55555d555d5d5d5d5d5d5d555d5d55d55555555555555555555555555555555555555555555555555555555555555555
55555555555555555ddd5d5d5d5d5ddd555555dd55dd5d5d5d5d5ddd5d5d55d55555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555665566656665656555556665666566655755566565656665666566656655666557555555555555555555555555555555555555555555555555555555555
55555656565656565656555555655655556557555655565656565656565556565565555755555555555555555555555555555555555555555555555555555555
55555656566556665656555555655665556557555655565656655665566556565565555755555555555555555555555555555555555555555555555555555555
55555656565656565666555555655655556557555655565656565656565556565565555755555555555555555555555555555555555555555555555555555555
55555666565656565666566655655666556555755566556656565656566656565565557555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555588888555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555bbb5bbb5bbb5bb55bbb55755c5c5cc588888555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555b5b5b5b55b55b5b55b557555c5c5c5588888555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555bbb5bb555b55b5b55b5575555555c5588888555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555b555b5b55b55b5b55b5575555555c5588888555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555b555b5b5bbb5b5b55b5557555555cc588888555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
5555566555555cc55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555656577755c55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555656555555c55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555656577755c55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
5555565655555ccc5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
55555bbb5bbb5bbb5bb55bbb557555665656566656665666566556665555566655555ccc55555ccc55555ccc5575555555555555555555555555555555555555
55555b5b5b5b55b55b5b55b5575556555656565656565655565655655555556555555c5c55555c5c55555c5c5557555555555555555555555555555555555555
55555bbb5bb555b55b5b55b5575556555656566556655665565655655555556555555c5c55555c5c55555c5c5557555555555555555555555555555555555555
55555b555b5b55b55b5b55b5575556555656565656565655565655655555556555755c5c55755c5c55755c5c5557555555555555555555555555555555555555
55555b555b5b5bbb5b5b55b5557555665566565656565666565655655575556557555ccc57555ccc57555ccc5575555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
82888222822882228888822282228288888282228222822288888888888888888888888888888888888888888222822282228882822282288222822288866688
82888828828282888888888288828288882888828882828288888888888888888888888888888888888888888882828282828828828288288282888288888888
82888828828282288888822288228222882882228822822288888888888888888888888888888888888888888882822282828828822288288222822288822288
82888828828282888888828888828282882882888882888288888888888888888888888888888888888888888882888282828828828288288882828888888888
82228222828282228888822282228222828882228222888288888888888888888888888888888888888888888882888282228288822282228882822288822288
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888

__map__
160a0a0a0a160a0a160a160a0a160a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
16161616160a160a160a160a0a160a0a00000000000000000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1616160a160a0a0a0a0a160a0a160a0a00000000000000000007070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
16160a160a160a16160a160a160a161600000000000000000000070007070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a16160a0a0a160a160a160a0a160a00000000000000000000000707000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a160a0a0a0a160a0a0a0a0a160a160a00000000000000000000000007070000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a1616160a160a0a1616160a1616161600000000000000000000000000070000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1616160a0a0a0a160a16160a160a160a00000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a160a0a0a0a0a0a160a0a0a0a161600000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010c00002805028051280512805123050230512405024051260502605128050260502405024051230502305121050210512105121051210502105124050240512805028051280512805126050260512405024051
010c000023050230512305123051200502005121050210512305023051000002100021050210511f0501f0511c0501c0511c0511c0511c0501c05121050210512405024051240512405123050230512105021051
010c00000405004051100501005104050040511005010051040500405110050100510405004051100501005109050090511505015051090500905115050150510905009051150501505109050090511505015051
010c00002305023051230512305123051230512405024051260502605126051260512805028051280512805124050240512405124051210502105121051210512105021051210512105121051210512105121050
000c000020050200511c0501c0511f0501f05121050210512305023051230512305124050240512405124051210502105121051210511c0501c0511c0511c0511c0501c0511c0511c0511c0511c0511c0511c051
000c00000805008051140501405107050070511305013051070500705113050130510705007051130501305107050070511305013051070500705113050130510705007051130501305107050070511305013051
010c000000000000002605026051260512605129050290512d0502d0512d0512d0512b0502b051290502905128050280512805128051280512805124050240512805028051280512805126050260512405024051
000c000000000000001d0501d0511d0511d051210502105124050240512405024050230502305121050210511f0501f0511f0511f0511f0511f0511c0501c0511f0501f051210501f0501d0501d0511c0501c051
010c00000e0500e050020500205000000000000205002050000000000002050020500905009050050500505000050000500c0500c05000000000000c0500c0500005000050070500705000000000000705007050
010c00002305023051230512305123050230512405024051260502605126051260512805028051280512805124050240512405124051210502105121051210512105021051210512105100000000000000000000
000c000020050200511c0501c0512005020051210502105123050230511f0501f05124050240511f0501f05121050210511c0501c0511c0501c0511c0511c0511c0501c0511c0511c05100000000000000000000
000c000017050170510b0500b05100000000001705017051000000000010050100510000000000140501405109050090511005010051090500905110050100510905009051090510905100000000000000000000
010c00001c0501c0511c0511c0511c0511c0511c0511c05118050180511805118051180511805118051180511a0501a0511a0511a0511a0511a0511a0511a0511705017051170511705117051170511705117051
000c00001805018051180511805118051180511805118051150501505115051150511505115051150511505117050170511705117051170511705117051170511405014051140511405114051140511405114051
010c00000905009051100501005109050090511005010051090500905110050100510905009051100501005108050080511005010051070500705110050100510705007051100501005107050070511005010051
000c00001805018051180511805118051180511805118051150501505115051150511505115051150511505114050140511405114051140511405114051140511705017051170511705117051170511705117051
000c00001505015051150511505115051150511505115051100501005110051100511005110051100511005110050100511005110051100511005110051100511305013051130511305113051130511305113051
000c00000905009051100501005109050090511005010051090500905110050100510905009051100501005108050080511005010051070500705110050100510705007051100501005107050070511005010051
000c00001c0501c0511c0511c0511c0511c0511c0511c05118050180511805118051180511805118051180511a0501a0511a0511a0511a0511a0511a0511a0511705017051170511705117051170511705117051
000c00001805018051180511805118051180511805118051150501505115051150511505115051150511505117050170511705117051170511705117051170511405014051140511405114051140511405114051
000c00000905009051100501005109050090511005010051090500905110050100510905009051100501005108050080511005010051070500705110050100510705007051100501005107050070511005010051
000c0000180501805118051180511c0501c0511c0511c051210502105121051210512105121051210512105120050200512005120051200512005120051200512005120051200512005120051200512005120051
000c000015050150511505115051180501805118051180511c0501c0511c0511c0511c0511c0511c0511c0511c0501c0511c0511c0511c0511c0511c0511c0511c0511c0511c0511c0511c0511c0511c0511c051
000c00000905009051100501005109050090511005010051090500905110050100510905009051100501005108050080511005010051070500705110050100510705007051100501005107050070511005010051
__music__
01 00010243
00 03040544
00 06070844
00 090a0b44
01 00010243
00 03040544
00 06070844
00 090a0b44
00 0c0d0e44
00 0f101144
00 12131444
02 15161744
